@prefix core: <https://data.emobon.embrc.eu/ns/core#>.  
@prefix core_vocab: <https://data.emobon.embrc.eu/ns/core_vocab#>.
@prefix dcat: <http://www.w3.org/ns/dcat#>.  
@prefix fno: <https://w3id.org/function/ontology#>.  
@prefix geo: <http://www.opengis.net/ont/geosparql#>.
@prefix qb: <http://purl.org/linked-data/cube#>.  
@prefix mr: <http://marineregions.org/ns/ontology#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.  
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.  
@prefix sampling: <https://data.emobon.embrc.eu/ns/sampling#>.  
@prefix schema: <http://schema.org/>.  
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.  
@prefix sosa: <http://www.w3.org/ns/sosa/>.  
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.  

@base <urn:embrc.eu:emobon:observatory-overview>.

<>
    a schema:Offer, fno:Function ; 
    rdfs:label "Observatory overview Offer Contract"@en;
    rdfs:comment "Describes the contract that returns all EMO-BON observatories together with associated metadata (e.g. name, type, geographical location, marine region, country, broad & local biome, ...)."@en;
    
    schema:itemOffered <https://lab.fairease.eu/dataset-demand-register> ; 

    # input parameters ~ none in this case?

    # result properties
    fno:returns <#datastructuredefinition> ; 
.

<#datastructuredefinition>
    a  qb:DataStructureDefinition ;
    # measure
    qb:component [ 
        a qb:ComponentSpecification ; 
        qb:measure <#observ_prop> ;
    ] ;
    # dimensions 
    qb:component [ 
        a qb:ComponentSpecification ; 
        qb:dimension    <#observ_name_prop> , 
                        <#type_prop> , 
                        <#country_prop> , 
                        <#location_prop> , 
                        <#marineregionid_prop> ,  
                        <#marineregionname_prop> , 
                        <#broadbiome_prop> ,
                        <#localbiome_prop> , 
                        <#mixsterm_prop> ,
                        <#samplingevent_count_prop> ,
                        <#earliest_sampling_date_prop> ,
                        <#latest_sampling_date_prop> ,
                        <#samples_count_prop> ,
                        <#enanum_count_prop> ; 
    ] ;
.

<#observ_prop>
    a rdf:Property , qb:MeasureProperty, fno:Output ; 
    rdfs:label "Observatory"^^xsd:string ; 
    skos:exactMatch sampling:linkedToObservatory ; 
    rdfs:range core:Observatory ; 
.

<#observ_name_prop> 
    a rdf:Property , qb:DimensionProperty , fno:Output ; 
    rdfs:label "Observatory name"^^xsd:string ; 
    skos:exactMatch core:observatoryId ;
    rdfs:range xsd:string ;
.

<#type_prop> 
    a rdf:Property , qb:DimensionProperty , fno:Output ; 
    rdfs:label "Type of observatory; either water, soil or hard"^^xsd:string ; 
    skos:exactMatch core:sampleType ;
    rdfs:range [
        a rdf:Alt ;
        rdf:li core_vocab:water ; 
        rdf:li core_vocab:soil ;  
        rdf:li core_vocab:hard ;
        ] ;
.

<#country_prop>
    a rdf:Property , qb:DimensionProperty , fno:Output ; 
    rdfs:label "country"^^xsd:string ; 
    skos:exactMatch core:originCountry ; 
    rdfs:range xsd:string ;
.

<#location_prop>
    a rdf:Property , qb:DimensionProperty , fno:Output ; 
    rdfs:label "Geographical location"^^xsd:string ; 
    skos:exactMatch geo:asWKT ; 
    rdfs:range geo:wktLiteral ;
.

<#marineregionid_prop>
    a rdf:Property , qb:DimensionProperty , fno:Output ; 
    rdfs:label "Marine Region identifier"^^xsd:string ; 
    skos:exactMatch core:marineRegion ; 
    rdfs:range [
        a rdf:Alt ;
        rdf:li mr:MRGeoObject ; 
        rdf:li skos:Concept ;
        ];                         # allowed types for marine region identifier: https://github.com/lifewatch/marineregions-ontology/blob/e2d046c1b37e8508b5676191443573a3f9840348/shapes.ttl#L74-L82
.

<#marineregionname_prop>
    a rdf:Property , qb:DimensionProperty , fno:Output ; 
    rdfs:label "Broad biome"^^xsd:string ; 
    skos:exactMatch core:marineRegionName ; 
    rdfs:range xsd:string ;
.

<#broadbiome_prop> 
    a rdf:Property , qb:DimensionProperty , fno:Output ; 
    rdfs:label "Broad biome"^^xsd:string ; 
    skos:exactMatch core:broadBiome ; 
    rdfs:range xsd:string ;
.

<#localbiome_prop> 
    a rdf:Property , qb:DimensionProperty , fno:Output ; 
    rdfs:label "Local biome"^^xsd:string ; 
    skos:exactMatch core:localBiome ; 
    rdfs:range xsd:string ;
.

<#mixsterm_prop>
    a rdf:Property , qb:DimensionProperty , fno:Output ; 
    rdfs:label "Mixs terms"^^xsd:string ; 
    skos:exactMatch core:hasMixsPackage ;
    rdfs:range xsd:string ;
.

<#samplingevent_count_prop>
    a rdf:Property , qb:DimensionProperty , fno:Output ; 
    rdfs:label "Number of sampling events associated to an observatory"^^xsd:string ; 
    skos:exactMatch <#samplingevent_count> ;                                                            # how to specify?  
    rdfs:range xsd:integer ;
.

<#earliest_sampling_date_prop>
    a rdf:Property , qb:DimensionProperty , fno:Output ; 
    rdfs:label "Earliest sampling event date of sampling events associated to an observatory"^^xsd:string ; 
    skos:exactMatch <#earliest_sampling_date> ;                                                         # how to specify?  
    rdfs:range xsd:date ;
.

<#latest_sampling_date_prop>
    a rdf:Property , qb:DimensionProperty , fno:Output ; 
    rdfs:label "Latest sampling event date of sampling events associated to an observatory"^^xsd:string ; 
    skos:exactMatch <#latest_sampling_date> ;                                                           # how to specify?  
    rdfs:range xsd:date ;
.

<#samples_count_prop>
    a rdf:Property , qb:DimensionProperty , fno:Output ; 
    rdfs:label "Number of samples associated to an observatory"^^xsd:string ; 
    skos:exactMatch <#samples_count> ;                                                                  # how to specify?  
    rdfs:range xsd:integer ;
.

<#enanum_count_prop>
    a rdf:Property , qb:DimensionProperty , fno:Output ; 
    rdfs:label "Number of ENA accession numbers associated to an observatory"^^xsd:string ; 
    skos:exactMatch <#enanum_count> ;                                                                   # how to specify?  
    rdfs:range xsd:integer ;
.