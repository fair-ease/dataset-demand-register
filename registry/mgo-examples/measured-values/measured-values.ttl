@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix schema: <http://schema.org/>.
@prefix dcat: <http://www.w3.org/ns/dcat#>.
@prefix qb: <http://purl.org/linked-data/cube#>.
@prefix fno: <https://w3id.org/function/ontology#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix core_vocab: <https://data.emobon.embrc.eu/ns/core_vocab#>.
@prefix emobon_core: <https://data.emobon.embrc.eu/ns/core#>.
@prefix emobon_sampling: <https://data.emobon.embrc.eu/ns/sampling#>.
@prefix my: <#>.

@base <urn:embrc.eu:emobon:measured-values>.

<>
    a schema:Offer, fno:Function ; 
    rdfs:label "Measured values Offer Contract"@en;
    rdfs:comment "Returns, for the mandatory measurements, the mean and mean deviation, as well as max and min values, for the given/specified named observatory, summed over all sampling events and over all water events separately with the BODC names. Next to this, also returns a list of BODC vs googlesheet names (disregarding the NAs)."@en;
    
    schema:itemOffered <https://lab.fairease.eu/dataset-demand-register> ; 

    # input parameters

    # result properties
    fno:returns <#datastructuredefinition> ;
.

<#datastructuredefinition>
    a  qb:DataStructureDefinition ;
    # measure
    qb:component [ 
        a qb:ComponentSpecification ; 
        qb:measure my:param_prop , my:param_value_prop ;
    ] ;
    # dimensions ~ context fields
    qb:component [ 
        a qb:ComponentSpecification ;
        qb:dimension my:obervid_prop ,
            my:sampling_event_prop ,
            my:sampling_type_prop ,
            my:date_prop ,
            my:pos_depth_prop ,
            my:pos_location_prop ,
            my:instr_type_prop ; 
    ] ;
    # attributes
    qb:component [ 
        a qb:ComponentSpecification ; 
        qb:attribute my:param_unit_prop ; 
    ] ;
.


## Parameters ##


## Dataset Properties ## 
my:param_prop
    a rdf:Property , qb:MeasureProperty, fno:Output ; 
    rdfs:label "Measured parameter"^^xsd:string ; 
    skos:exactMatch sosa:observedProperty ; 
    rdfs:range xsd:string ; 
.

my:param_value_prop
    a rdf:Property , qb:MeasureProperty, fno:Output ; 
    rdfs:label "Measured parameter value"^^xsd:string ; 
    skos:closeMatch sosa:hasResult , qudt:numericValue ;        #note: issue to check out 
    rdfs:range xsd:double ; 
.

my:param_unit_prop 
    a rdf:Property , qb:AttributeProperty , fno:Output ; 
    rdfs:label "Measured parameter unit"^^xsd:string ; 
    skos:exactMatch sosa:hasResult , qudt:unit ;                #note: issue to check out 
    rdfs:range xsd:anyURI ;
.

my:obervid_prop
    a rdf:Property , qb:DimensionProperty, fno:Output ; 
    rdfs:label "Observatory ID"^^xsd:string ; 
    skos:exactMatch sosa:hasFeatureOfInterest , prov:wasGeneratedBy , sampling:linkedToObservatory ;                 #note: issue to check out 
    rdfs:range emobon_core:Observatory ;
.

my:sampling_event_prop
    a rdf:Property , qb:DimensionProperty, fno:Output ; 
    rdfs:label "Sampling event"^^xsd:string ; 
    skos:exactMatch sosa:hasFeatureOfInterest , prov:wasGeneratedBy ;                 #note: issue to check out 
    rdfs:range sosa:Sampling ;
.

my:sampling_type_prop
    a rdf:Property , qb:DimensionProperty, fno:Output ; 
    rdfs:label "Sampling type"^^xsd:string ; 
    skos:exactMatch emobon_core:sampleType ; 
    rdfs:range core_vocab:SampleType ;
.

my:date_prop
    a rdf:Property , qb:DimensionProperty, fno:Output ; 
    rdfs:label "Date"^^xsd:string ; 
    skos:exactMatch sosa:resultTime ; 
    rdfs:range xsd:dateTime ;
.

my:pos_depth_prop
    a rdf:Property , qb:DimensionProperty, fno:Output ; 
    rdfs:label "Position depth"^^xsd:string ; 
    skos:exactMatch sampling:minSamplingDepth , sampling:maxSamplingDepth , sampling:minSampleDepth , sampling:maxSampleDepth ; 
    rdfs:range xsd:double ;
.

my:pos_location_prop
    a rdf:Property , qb:DimensionProperty, fno:Output ; 
    rdfs:label "Position location"^^xsd:string ; 
    skos:exactMatch emobon_core:geoLocation , geo:asWKT ;   #note:issue to check out
    rdfs:range xsd:string ;
.

my:instr_type_prop
    a rdf:Property , qb:DimensionProperty, fno:Output ; 
    rdfs:label "Instrument type"^^xsd:string ; 
    skos:exactMatch sosa:madeBySampler ; 
    rdfs:range xsd:string ;
.
