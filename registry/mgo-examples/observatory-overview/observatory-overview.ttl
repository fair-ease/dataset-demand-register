@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix schema: <http://schema.org/>.
@prefix dcat: <http://www.w3.org/ns/dcat#>.
@prefix qb: <http://purl.org/linked-data/cube#>.
@prefix fno: <https://w3id.org/function/ontology#>.
@prefix emobon-core: <https://data.emobon.embrc.eu/ns/core#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix geo: <http://www.opengis.net/ont/geosparql#> .
@prefix my: <#>.

@base <urn:embrc.eu:emobon:observatory-overview>.

<>
    a schema:Offer, fno:Function ; 
    rdfs:label "Observatory overview Offer Contract"@en;
    rdfs:comment "Returns a list of observatories, with information on their names, country, location (lat, long and mrgid), and any habitat info."@en;
    
    schema:itemOffered <https://lab.fairease.eu/dataset-demand-register> ; 

    # input parameters
    fno:expects ( ?? ) ;
    # result properties
    fno:returns <#datastructuredefinition> ; 
.

<#datastructuredefinition>
    a  qb:DataStructureDefinition ;
    # measure
    qb:component [ 
        a qb:ComponentSpecification ; 
        qb:measure my:observ_prop ;
    ] ;
    # dimensions ~ no dimensions in this case
    #attributes
    qb:component [ 
        a qb:ComponentSpecification ; 
        qb:attribute my:partner_name_prop , my:observ_name_prop , my:type_prop , my:country_prop , my:location_prop , my:mrgid_prop ,  my:broadbiome_prop , my:localbiome_prop , my:envmaterial_prop ;
    ] ;
.

## Parameters ##


## Dataset Properties ## 
my:observ_prop
    a rdf:Property , qb:MeasureProperty, fno:Output ; 
    rdfs:label "observatory"^^xsd:string ; 
    skos:exactMatch emobon-core:Observatory ; 
    rdfs:range xsd:string ; 
.

my:partner_name_prop 
    a rdf:Property , qb:AttributeProperty , fno:Output ; 
    rdfs:label "Partner name"^^xsd:string ; 
    skos:exactMatch emobon-core:observatorySampleId ;
    rdfs:range xsd:string ;
.

my:observ_name_prop 
    a rdf:Property , qb:AttributeProperty , fno:Output ; 
    rdfs:label "Observatory name"^^xsd:string ; 
    skos:exactMatch emobon-core:observatorySampleId ;
    rdfs:range xsd:string ;
.

my:type_prop 
    a rdf:Property , qb:AttributeProperty , fno:Output ; 
    rdfs:label "type"^^xsd:string ; 
    skos:exactMatch emobon-core:sampleType ;
    rdfs:range xsd:string ;
.

my:country_prop
    a rdf:Property , qb:AttributeProperty , fno:Output ; 
    rdfs:label "country"^^xsd:string ; 
    skos:exactMatch emobon-core:originCountry ; 
    rdfs:range xsd:string ;
.

my:location_prop
    a rdf:Property , qb:AttributeProperty , fno:Output ; 
    rdfs:label "latitude"^^xsd:string ; 
    skos:exactMatch geo:asWKT ; 
    rdfs:range geo:wktLiteral ;
.

my:mrgid_prop
    a rdf:Property , qb:AttributeProperty , fno:Output ; 
    rdfs:label "Marine Region identifier"^^xsd:string ; 
    skos:exactMatch emobon-core:marineRegion ; 
    rdfs:range xsd:anyURI ;
.


my:broadbiome_prop
    a rdf:Property , qb:AttributeProperty , fno:Output ; 
    rdfs:label "Broad biome"^^xsd:string ; 
    skos:exactMatch emobon-core:broadBiome ; 
    rdfs:range xsd:anyURI ;                                                 #values are expected to be from fixed URL list --> there's props a better way to specify this 
.

my:localbiome_prop 
    a rdf:Property , qb:AttributeProperty , fno:Output ; 
    rdfs:label "Local biome"^^xsd:string ; 
    skos:exactMatch emobon-core:localBiome ; 
    rdfs:range xsd:anyURI ;                                                 #values are expected to be from fixed URL list --> there's props a better way to specify this 
.

my:envmaterial_prop
    a rdf:Property , qb:AttributeProperty , fno:Output ; 
    rdfs:label "Env material"^^xsd:string ; 
    skos:exactMatch sosa:hasFeatureOfInterest , sosa:isSampleOf ;           #note: issue identified
    rdfs:range xsd:string ;
.